{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 82, "column": 0}, "map": {"version":3,"sources":["file:///home/devlinux/devlinux/littletuna4.github.io/site/src/components/ui/metadata-breadcrumb.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const MetadataBreadcrumb = registerClientReference(\n    function() { throw new Error(\"Attempted to call MetadataBreadcrumb() from the server but MetadataBreadcrumb is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/devlinux/littletuna4.github.io/site/src/components/ui/metadata-breadcrumb.tsx <module evaluation>\",\n    \"MetadataBreadcrumb\",\n);\nexport const useBreadcrumbs = registerClientReference(\n    function() { throw new Error(\"Attempted to call useBreadcrumbs() from the server but useBreadcrumbs is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/devlinux/littletuna4.github.io/site/src/components/ui/metadata-breadcrumb.tsx <module evaluation>\",\n    \"useBreadcrumbs\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;;;AACvE;;AACO,MAAM,qBAAqB,IAAA,0bAAuB,EACrD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,+GACA;AAEG,MAAM,iBAAiB,IAAA,0bAAuB,EACjD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,+GACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 101, "column": 0}, "map": {"version":3,"sources":["file:///home/devlinux/devlinux/littletuna4.github.io/site/src/components/ui/metadata-breadcrumb.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const MetadataBreadcrumb = registerClientReference(\n    function() { throw new Error(\"Attempted to call MetadataBreadcrumb() from the server but MetadataBreadcrumb is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/devlinux/littletuna4.github.io/site/src/components/ui/metadata-breadcrumb.tsx\",\n    \"MetadataBreadcrumb\",\n);\nexport const useBreadcrumbs = registerClientReference(\n    function() { throw new Error(\"Attempted to call useBreadcrumbs() from the server but useBreadcrumbs is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/devlinux/littletuna4.github.io/site/src/components/ui/metadata-breadcrumb.tsx\",\n    \"useBreadcrumbs\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;;;AACvE;;AACO,MAAM,qBAAqB,IAAA,0bAAuB,EACrD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,2FACA;AAEG,MAAM,iBAAiB,IAAA,0bAAuB,EACjD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,2FACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 120, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 128, "column": 0}, "map": {"version":3,"sources":["file:///home/devlinux/devlinux/littletuna4.github.io/site/src/app/career-ledger/%5B%5B...slug%5D%5D/page.tsx"],"sourcesContent":["import { notFound } from 'next/navigation';\nimport ReactMarkdown from 'react-markdown';\nimport fs from 'fs';\nimport path from 'path';\nimport { MetadataBreadcrumb } from '@/components/ui/metadata-breadcrumb';\n\n/**\n * Career Ledger Dynamic Page Handler\n *\n * Functional Requirements:\n * - Dynamically render markdown files from the career-ledger directory\n * - Support nested directory structures (jobs, projects, education, skills)\n * - Handle index.md files as default pages\n * - Generate static params at build time for static export\n * - Provide breadcrumb navigation\n * - Render markdown with proper styling\n */\n\ninterface CareerLedgerPageProps {\n  readonly params: Promise<{ slug?: string[] }>;\n}\n\nexport async function generateStaticParams(): Promise<\n  Array<{ slug: string[] }>\n> {\n  const careerLedgerPath = path.join(process.cwd(), 'src/app/career-ledger');\n\n  const staticParams: Array<{ slug: string[] }> = [{ slug: [] }]; // Root page\n\n  function scanDirectory(dirPath: string, segments: string[]): void {\n    try {\n      const entries = fs.readdirSync(dirPath, { withFileTypes: true });\n\n      for (const entry of entries) {\n        const entryPath = path.join(dirPath, entry.name);\n\n        if (entry.isDirectory()) {\n          const newSegments = [...segments, entry.name];\n          const indexPath = path.join(entryPath, 'index.md');\n\n          // Add directory if it has index.md\n          if (fs.existsSync(indexPath)) {\n            staticParams.push({ slug: newSegments });\n          }\n\n          // Recursively scan subdirectories\n          scanDirectory(entryPath, newSegments);\n        } else if (\n          entry.isFile() &&\n          entry.name.endsWith('.md') &&\n          entry.name !== 'README.md' &&\n          entry.name !== 'index.md'\n        ) {\n          // Add standalone markdown files (e.g., certifications.md)\n          const filenameWithoutExt = entry.name.replace('.md', '');\n          const newSegments = [...segments, filenameWithoutExt];\n          staticParams.push({ slug: newSegments });\n        }\n      }\n    } catch (error) {\n      console.error(`Error scanning directory ${dirPath}:`, error);\n    }\n  }\n\n  scanDirectory(careerLedgerPath, []);\n\n  return staticParams;\n}\n\nexport default async function CareerLedgerPage({\n  params,\n}: CareerLedgerPageProps): Promise<React.JSX.Element> {\n  const resolvedParams = await params;\n  const segments = resolvedParams.slug || [];\n  const careerLedgerPath = path.join(process.cwd(), 'src/app/career-ledger');\n\n  // Construct file path\n  let filePath: string;\n\n  if (segments.length === 0) {\n    // Root page - try README.md first, then index.md\n    filePath = path.join(careerLedgerPath, 'README.md');\n    if (!fs.existsSync(filePath)) {\n      filePath = path.join(careerLedgerPath, 'index.md');\n    }\n  } else {\n    // Nested pages - try index.md first, then {last-segment}.md, then page.md\n    const lastSegment = segments[segments.length - 1];\n    const parentPath = segments.slice(0, -1);\n\n    filePath = path.join(careerLedgerPath, ...segments, 'index.md');\n    if (!fs.existsSync(filePath)) {\n      filePath = path.join(\n        careerLedgerPath,\n        ...parentPath,\n        `${lastSegment}.md`\n      );\n    }\n    if (!fs.existsSync(filePath)) {\n      filePath = path.join(careerLedgerPath, ...segments, 'page.md');\n    }\n  }\n\n  if (!fs.existsSync(filePath)) {\n    notFound();\n  }\n\n  const content = fs.readFileSync(filePath, 'utf-8');\n\n  // Extract title from first heading\n  const titleMatch = content.match(/^#\\s+(.+)$/m);\n  const pageTitle = titleMatch\n    ? titleMatch[1]\n    : segments.length > 0\n      ? segments[segments.length - 1].replace(/-/g, ' ')\n      : 'Career Ledger';\n\n  // Build breadcrumb\n  const breadcrumbItems = [\n    { label: 'Home', href: '/' },\n    { label: 'Career Ledger', href: '/career-ledger' },\n  ];\n\n  segments.forEach((segment, index) => {\n    const href = `/career-ledger/${segments.slice(0, index + 1).join('/')}`;\n    breadcrumbItems.push({\n      label: segment.replace(/-/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase()),\n      href,\n    });\n  });\n\n  return (\n    <>\n      <div className='mb-8'>\n        <MetadataBreadcrumb items={breadcrumbItems} />\n      </div>\n      <article>\n        <ReactMarkdown\n          components={{\n            h1: ({ children }) => (\n              <h1 className='text-4xl font-bold text-foreground mb-6 mt-8 first:mt-0'>\n                {children}\n              </h1>\n            ),\n            h2: ({ children }) => (\n              <h2 className='text-3xl font-bold text-foreground mb-4 mt-6'>\n                {children}\n              </h2>\n            ),\n            h3: ({ children }) => (\n              <h3 className='text-2xl font-bold text-foreground mb-3 mt-4'>\n                {children}\n              </h3>\n            ),\n            h4: ({ children }) => (\n              <h4 className='text-xl font-bold text-foreground mb-2 mt-3'>\n                {children}\n              </h4>\n            ),\n            p: ({ children }) => (\n              <p className='text-foreground-secondary mb-4 leading-relaxed'>\n                {children}\n              </p>\n            ),\n            ul: ({ children }) => (\n              <ul className='list-disc list-inside mb-4 text-foreground-secondary space-y-2 ml-4'>\n                {children}\n              </ul>\n            ),\n            ol: ({ children }) => (\n              <ol className='list-decimal list-inside mb-4 text-foreground-secondary space-y-2 ml-4'>\n                {children}\n              </ol>\n            ),\n            li: ({ children }) => (\n              <li className='text-foreground-secondary'>{children}</li>\n            ),\n            a: ({ href, children }) => (\n              <a\n                href={href}\n                className='text-primary hover:text-primary/80 underline transition-colors'\n                target={href?.startsWith('http') ? '_blank' : undefined}\n                rel={\n                  href?.startsWith('http') ? 'noopener noreferrer' : undefined\n                }\n              >\n                {children}\n              </a>\n            ),\n            code: ({ children, className }) => {\n              const isInline = !className;\n              return isInline ? (\n                <code className='bg-background-secondary px-1.5 py-0.5 rounded text-sm font-mono text-foreground'>\n                  {children}\n                </code>\n              ) : (\n                <pre className='bg-background-secondary p-4 rounded-lg overflow-x-auto mb-4'>\n                  <code className='text-sm font-mono text-foreground'>\n                    {children}\n                  </code>\n                </pre>\n              );\n            },\n            blockquote: ({ children }) => (\n              <blockquote className='border-l-4 border-primary pl-4 italic text-foreground-secondary mb-4 my-4'>\n                {children}\n              </blockquote>\n            ),\n            hr: () => <hr className='my-8 border-border' />,\n            strong: ({ children }) => (\n              <strong className='font-bold text-foreground'>{children}</strong>\n            ),\n            em: ({ children }) => (\n              <em className='italic text-foreground-secondary'>{children}</em>\n            ),\n          }}\n        >\n          {content}\n        </ReactMarkdown>\n      </article>\n    </>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}