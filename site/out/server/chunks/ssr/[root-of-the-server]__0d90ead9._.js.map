{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///home/devlinux/devlinux/littletuna4.github.io/site/src/components/HeroSection.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/devlinux/littletuna4.github.io/site/src/components/HeroSection.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/devlinux/littletuna4.github.io/site/src/components/HeroSection.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;uCACe,IAAA,0bAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAAsU,GACnW,oGACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":["file:///home/devlinux/devlinux/littletuna4.github.io/site/src/components/HeroSection.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/devlinux/littletuna4.github.io/site/src/components/HeroSection.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/devlinux/littletuna4.github.io/site/src/components/HeroSection.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;uCACe,IAAA,0bAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAAkT,GAC/U,gFACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 43, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 51, "column": 0}, "map": {"version":3,"sources":["file:///home/devlinux/devlinux/littletuna4.github.io/site/src/components/BlogSection.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/devlinux/littletuna4.github.io/site/src/components/BlogSection.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/devlinux/littletuna4.github.io/site/src/components/BlogSection.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;uCACe,IAAA,0bAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAAsU,GACnW,oGACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 65, "column": 0}, "map": {"version":3,"sources":["file:///home/devlinux/devlinux/littletuna4.github.io/site/src/components/BlogSection.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/devlinux/littletuna4.github.io/site/src/components/BlogSection.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/devlinux/littletuna4.github.io/site/src/components/BlogSection.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;uCACe,IAAA,0bAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAAkT,GAC/U,gFACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 79, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 87, "column": 0}, "map": {"version":3,"sources":["file:///home/devlinux/devlinux/littletuna4.github.io/site/src/components/TypewriterAnimation.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/devlinux/littletuna4.github.io/site/src/components/TypewriterAnimation.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/devlinux/littletuna4.github.io/site/src/components/TypewriterAnimation.tsx <module evaluation>\",\n    \"default\",\n);\nexport const professions = registerClientReference(\n    function() { throw new Error(\"Attempted to call professions() from the server but professions is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/devlinux/littletuna4.github.io/site/src/components/TypewriterAnimation.tsx <module evaluation>\",\n    \"professions\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;;;AACvE;;uCACe,IAAA,0bAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAA8U,GAC3W,4GACA;AAEG,MAAM,cAAc,IAAA,0bAAuB,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,4GACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 106, "column": 0}, "map": {"version":3,"sources":["file:///home/devlinux/devlinux/littletuna4.github.io/site/src/components/TypewriterAnimation.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/devlinux/littletuna4.github.io/site/src/components/TypewriterAnimation.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/devlinux/littletuna4.github.io/site/src/components/TypewriterAnimation.tsx\",\n    \"default\",\n);\nexport const professions = registerClientReference(\n    function() { throw new Error(\"Attempted to call professions() from the server but professions is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/devlinux/littletuna4.github.io/site/src/components/TypewriterAnimation.tsx\",\n    \"professions\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;;;AACvE;;uCACe,IAAA,0bAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAA0T,GACvV,wFACA;AAEG,MAAM,cAAc,IAAA,0bAAuB,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,wFACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 125, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 133, "column": 0}, "map": {"version":3,"sources":["file:///home/devlinux/devlinux/littletuna4.github.io/site/src/components/Industries/IndustriesGraph.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const IndustriesGraph = registerClientReference(\n    function() { throw new Error(\"Attempted to call IndustriesGraph() from the server but IndustriesGraph is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/devlinux/littletuna4.github.io/site/src/components/Industries/IndustriesGraph.tsx <module evaluation>\",\n    \"IndustriesGraph\",\n);\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/devlinux/littletuna4.github.io/site/src/components/Industries/IndustriesGraph.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/devlinux/littletuna4.github.io/site/src/components/Industries/IndustriesGraph.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;;;AACvE;;AACO,MAAM,kBAAkB,IAAA,0bAAuB,EAClD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,mHACA;uCAEW,IAAA,0bAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAAqV,GAClX,mHACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 152, "column": 0}, "map": {"version":3,"sources":["file:///home/devlinux/devlinux/littletuna4.github.io/site/src/components/Industries/IndustriesGraph.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const IndustriesGraph = registerClientReference(\n    function() { throw new Error(\"Attempted to call IndustriesGraph() from the server but IndustriesGraph is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/devlinux/littletuna4.github.io/site/src/components/Industries/IndustriesGraph.tsx\",\n    \"IndustriesGraph\",\n);\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/devlinux/littletuna4.github.io/site/src/components/Industries/IndustriesGraph.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/devlinux/littletuna4.github.io/site/src/components/Industries/IndustriesGraph.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;;;AACvE;;AACO,MAAM,kBAAkB,IAAA,0bAAuB,EAClD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,+FACA;uCAEW,IAAA,0bAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAAiU,GAC9V,+FACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 171, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 179, "column": 0}, "map": {"version":3,"sources":["file:///home/devlinux/devlinux/littletuna4.github.io/site/src/components/Industries/IndustriesSection.tsx"],"sourcesContent":["import dynamic from 'next/dynamic';\n\nimport IndustriesGraph from './IndustriesGraph';\n\nexport default function IndustriesSection() {\n  return (\n    <section id='industries' className='py-20 bg-background'>\n      <div className='container mx-auto px-6'>\n        <div className='w-full'>\n          <div className='text-center mb-8'>\n            <h2 className='text-3xl md:text-4xl font-bold mb-4'>Interests </h2>\n          </div>\n\n          <div className='relative w-full bg-card rounded-lg border border-border overflow-hidden shadow-lg h-[600px]'>\n            <IndustriesGraph />\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n"],"names":[],"mappings":";;;;;AAEA;;;AAEe,SAAS;IACtB,qBACE,gaAAC;QAAQ,IAAG;QAAa,WAAU;kBACjC,cAAA,gaAAC;YAAI,WAAU;sBACb,cAAA,gaAAC;gBAAI,WAAU;;kCACb,gaAAC;wBAAI,WAAU;kCACb,cAAA,gaAAC;4BAAG,WAAU;sCAAsC;;;;;;;;;;;kCAGtD,gaAAC;wBAAI,WAAU;kCACb,cAAA,gaAAC,iNAAe;;;;;;;;;;;;;;;;;;;;;;;;;;AAM5B","debugId":null}},
    {"offset": {"line": 244, "column": 0}, "map": {"version":3,"sources":["file:///home/devlinux/devlinux/littletuna4.github.io/site/src/components/providers/ThemeProvider.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const ThemeProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call ThemeProvider() from the server but ThemeProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/devlinux/littletuna4.github.io/site/src/components/providers/ThemeProvider.tsx <module evaluation>\",\n    \"ThemeProvider\",\n);\nexport const useTheme = registerClientReference(\n    function() { throw new Error(\"Attempted to call useTheme() from the server but useTheme is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/devlinux/littletuna4.github.io/site/src/components/providers/ThemeProvider.tsx <module evaluation>\",\n    \"useTheme\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;;;AACvE;;AACO,MAAM,gBAAgB,IAAA,0bAAuB,EAChD;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,gHACA;AAEG,MAAM,WAAW,IAAA,0bAAuB,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,gHACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 263, "column": 0}, "map": {"version":3,"sources":["file:///home/devlinux/devlinux/littletuna4.github.io/site/src/components/providers/ThemeProvider.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const ThemeProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call ThemeProvider() from the server but ThemeProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/devlinux/littletuna4.github.io/site/src/components/providers/ThemeProvider.tsx\",\n    \"ThemeProvider\",\n);\nexport const useTheme = registerClientReference(\n    function() { throw new Error(\"Attempted to call useTheme() from the server but useTheme is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/devlinux/littletuna4.github.io/site/src/components/providers/ThemeProvider.tsx\",\n    \"useTheme\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;;;AACvE;;AACO,MAAM,gBAAgB,IAAA,0bAAuB,EAChD;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,4FACA;AAEG,MAAM,WAAW,IAAA,0bAAuB,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,4FACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 282, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 290, "column": 0}, "map": {"version":3,"sources":["file:///home/devlinux/devlinux/littletuna4.github.io/site/src/components/ui/ThemeToggle.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const ThemeToggle = registerClientReference(\n    function() { throw new Error(\"Attempted to call ThemeToggle() from the server but ThemeToggle is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/devlinux/littletuna4.github.io/site/src/components/ui/ThemeToggle.tsx <module evaluation>\",\n    \"ThemeToggle\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,cAAc,IAAA,0bAAuB,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,uGACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 304, "column": 0}, "map": {"version":3,"sources":["file:///home/devlinux/devlinux/littletuna4.github.io/site/src/components/ui/ThemeToggle.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const ThemeToggle = registerClientReference(\n    function() { throw new Error(\"Attempted to call ThemeToggle() from the server but ThemeToggle is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/devlinux/littletuna4.github.io/site/src/components/ui/ThemeToggle.tsx\",\n    \"ThemeToggle\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,cAAc,IAAA,0bAAuB,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,mFACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 318, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 326, "column": 0}, "map": {"version":3,"sources":["file:///home/devlinux/devlinux/littletuna4.github.io/site/src/components/ui/SimpleThemeToggle.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const SimpleThemeToggle = registerClientReference(\n    function() { throw new Error(\"Attempted to call SimpleThemeToggle() from the server but SimpleThemeToggle is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/devlinux/littletuna4.github.io/site/src/components/ui/SimpleThemeToggle.tsx <module evaluation>\",\n    \"SimpleThemeToggle\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,oBAAoB,IAAA,0bAAuB,EACpD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,6GACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 340, "column": 0}, "map": {"version":3,"sources":["file:///home/devlinux/devlinux/littletuna4.github.io/site/src/components/ui/SimpleThemeToggle.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const SimpleThemeToggle = registerClientReference(\n    function() { throw new Error(\"Attempted to call SimpleThemeToggle() from the server but SimpleThemeToggle is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/devlinux/littletuna4.github.io/site/src/components/ui/SimpleThemeToggle.tsx\",\n    \"SimpleThemeToggle\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,oBAAoB,IAAA,0bAAuB,EACpD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,yFACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 354, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 362, "column": 0}, "map": {"version":3,"sources":["file:///home/devlinux/devlinux/littletuna4.github.io/site/src/components/ui/metadata-breadcrumb.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const MetadataBreadcrumb = registerClientReference(\n    function() { throw new Error(\"Attempted to call MetadataBreadcrumb() from the server but MetadataBreadcrumb is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/devlinux/littletuna4.github.io/site/src/components/ui/metadata-breadcrumb.tsx <module evaluation>\",\n    \"MetadataBreadcrumb\",\n);\nexport const useBreadcrumbs = registerClientReference(\n    function() { throw new Error(\"Attempted to call useBreadcrumbs() from the server but useBreadcrumbs is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/devlinux/littletuna4.github.io/site/src/components/ui/metadata-breadcrumb.tsx <module evaluation>\",\n    \"useBreadcrumbs\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;;;AACvE;;AACO,MAAM,qBAAqB,IAAA,0bAAuB,EACrD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,+GACA;AAEG,MAAM,iBAAiB,IAAA,0bAAuB,EACjD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,+GACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 381, "column": 0}, "map": {"version":3,"sources":["file:///home/devlinux/devlinux/littletuna4.github.io/site/src/components/ui/metadata-breadcrumb.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const MetadataBreadcrumb = registerClientReference(\n    function() { throw new Error(\"Attempted to call MetadataBreadcrumb() from the server but MetadataBreadcrumb is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/devlinux/littletuna4.github.io/site/src/components/ui/metadata-breadcrumb.tsx\",\n    \"MetadataBreadcrumb\",\n);\nexport const useBreadcrumbs = registerClientReference(\n    function() { throw new Error(\"Attempted to call useBreadcrumbs() from the server but useBreadcrumbs is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/devlinux/littletuna4.github.io/site/src/components/ui/metadata-breadcrumb.tsx\",\n    \"useBreadcrumbs\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;;;AACvE;;AACO,MAAM,qBAAqB,IAAA,0bAAuB,EACrD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,2FACA;AAEG,MAAM,iBAAiB,IAAA,0bAAuB,EACjD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,2FACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 400, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 408, "column": 0}, "map": {"version":3,"sources":["file:///home/devlinux/devlinux/littletuna4.github.io/site/src/components/ui/structured-breadcrumb.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const StructuredBreadcrumb = registerClientReference(\n    function() { throw new Error(\"Attempted to call StructuredBreadcrumb() from the server but StructuredBreadcrumb is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/devlinux/littletuna4.github.io/site/src/components/ui/structured-breadcrumb.tsx <module evaluation>\",\n    \"StructuredBreadcrumb\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,uBAAuB,IAAA,0bAAuB,EACvD;IAAa,MAAM,IAAI,MAAM;AAAwP,GACrR,iHACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 422, "column": 0}, "map": {"version":3,"sources":["file:///home/devlinux/devlinux/littletuna4.github.io/site/src/components/ui/structured-breadcrumb.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const StructuredBreadcrumb = registerClientReference(\n    function() { throw new Error(\"Attempted to call StructuredBreadcrumb() from the server but StructuredBreadcrumb is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/devlinux/littletuna4.github.io/site/src/components/ui/structured-breadcrumb.tsx\",\n    \"StructuredBreadcrumb\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,uBAAuB,IAAA,0bAAuB,EACvD;IAAa,MAAM,IAAI,MAAM;AAAwP,GACrR,6FACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 436, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 444, "column": 0}, "map": {"version":3,"sources":["file:///home/devlinux/devlinux/littletuna4.github.io/site/src/lib/utils.ts"],"sourcesContent":["/**\n * Utility Functions\n * \n * Functional Requirements:\n * - Provides common utility functions for the application\n * - Includes className merging utility for conditional styling\n * - Supports Tailwind CSS class name conflicts resolution\n */\n\nimport { type ClassValue, clsx } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\n/**\n * Merges class names using clsx and tailwind-merge\n * Handles conditional classes and resolves Tailwind conflicts\n */\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n"],"names":[],"mappings":"AAAA;;;;;;;CAOC;;;;AAED;AACA;;;AAMO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,IAAA,uRAAO,EAAC,IAAA,iPAAI,EAAC;AACtB","debugId":null}},
    {"offset": {"line": 466, "column": 0}, "map": {"version":3,"sources":["file:///home/devlinux/devlinux/littletuna4.github.io/site/src/components/icons/Icon.tsx"],"sourcesContent":["/**\n * Base Icon Component\n * \n * Functional Requirements:\n * - Provides consistent styling and sizing for all icon components\n * - Integrates with the theme system for automatic light/dark mode support\n * - Supports customizable colors through theme-aware CSS classes\n * - Maintains accessibility with proper ARIA attributes\n * - Provides responsive sizing options\n * - Supports custom className overrides while maintaining theme consistency\n */\n\nimport React from 'react';\nimport { cn } from '@/lib/utils';\n\nexport interface IconProps extends React.SVGProps<SVGSVGElement> {\n  /**\n   * Size of the icon. Can be a number (pixels) or a predefined size string.\n   * @default \"default\"\n   */\n  size?: number | 'xs' | 'sm' | 'default' | 'lg' | 'xl' | '2xl';\n  \n  /**\n   * Color variant for the icon. Uses theme-aware colors.\n   * @default \"current\"\n   */\n  color?: 'current' | 'primary' | 'secondary' | 'muted' | 'destructive' | 'success' | 'warning' | 'info';\n  \n  /**\n   * Additional CSS classes to apply to the icon\n   */\n  className?: string;\n  \n  /**\n   * Whether the icon should inherit the current text color\n   * @default true\n   */\n  inheritColor?: boolean;\n}\n\nconst sizeMap = {\n  xs: 12,\n  sm: 16,\n  default: 20,\n  lg: 24,\n  xl: 32,\n  '2xl': 40,\n} as const;\n\nconst colorMap = {\n  current: 'text-current',\n  primary: 'text-primary',\n  secondary: 'text-secondary',\n  muted: 'text-muted-foreground',\n  destructive: 'text-destructive',\n  success: 'text-success',\n  warning: 'text-warning',\n  info: 'text-info',\n} as const;\n\nexport const Icon: React.FC<IconProps> = ({\n  size = 'default',\n  color = 'current',\n  className,\n  inheritColor = true,\n  children,\n  ...props\n}) => {\n  const sizeValue = typeof size === 'number' ? size : sizeMap[size];\n  const colorClass = inheritColor ? colorMap[color] : '';\n  \n  return (\n    <svg\n      width={sizeValue}\n      height={sizeValue}\n      viewBox=\"0 0 30 30\"\n      fill=\"currentColor\"\n      className={cn(\n        'inline-block transition-colors duration-300',\n        colorClass,\n        className\n      )}\n      aria-hidden=\"true\"\n      {...props}\n    >\n      {children}\n    </svg>\n  );\n};\n\nexport default Icon;\n"],"names":[],"mappings":"AAAA;;;;;;;;;;CAUC;;;;;;;AAGD;;;AA2BA,MAAM,UAAU;IACd,IAAI;IACJ,IAAI;IACJ,SAAS;IACT,IAAI;IACJ,IAAI;IACJ,OAAO;AACT;AAEA,MAAM,WAAW;IACf,SAAS;IACT,SAAS;IACT,WAAW;IACX,OAAO;IACP,aAAa;IACb,SAAS;IACT,SAAS;IACT,MAAM;AACR;AAEO,MAAM,OAA4B,CAAC,EACxC,OAAO,SAAS,EAChB,QAAQ,SAAS,EACjB,SAAS,EACT,eAAe,IAAI,EACnB,QAAQ,EACR,GAAG,OACJ;IACC,MAAM,YAAY,OAAO,SAAS,WAAW,OAAO,OAAO,CAAC,KAAK;IACjE,MAAM,aAAa,eAAe,QAAQ,CAAC,MAAM,GAAG;IAEpD,qBACE,gaAAC;QACC,OAAO;QACP,QAAQ;QACR,SAAQ;QACR,MAAK;QACL,WAAW,IAAA,4KAAE,EACX,+CACA,YACA;QAEF,eAAY;QACX,GAAG,KAAK;kBAER;;;;;;AAGP;uCAEe","debugId":null}},
    {"offset": {"line": 527, "column": 0}, "map": {"version":3,"sources":["file:///home/devlinux/devlinux/littletuna4.github.io/site/src/components/icons/LinkedInIcon.tsx"],"sourcesContent":["/**\n * LinkedIn Icon Component\n * \n * Functional Requirements:\n * - Renders the LinkedIn logo as a theme-aware React component\n * - Integrates with the theme system for automatic light/dark mode support\n * - Supports customizable sizing and colors through the base Icon component\n * - Maintains accessibility with proper ARIA attributes\n * - Provides consistent styling with other icon components\n * - Uses semantic color classes for theme integration\n */\n\nimport React from 'react';\nimport { Icon, type IconProps } from './Icon';\n\nexport interface LinkedInIconProps extends Omit<IconProps, 'children'> {\n  /**\n   * Whether to show the LinkedIn text along with the icon\n   * @default false\n   */\n  showText?: boolean;\n}\n\nexport const LinkedInIcon: React.FC<LinkedInIconProps> = ({\n  ...props\n}) => {\n  return (\n    <Icon {...props}>\n      <g>\n        <g>\n          <path d=\"M8.3,3.7c0,1.4-0.9,2.6-2.7,2.6C4,6.3,3,5.2,3,3.7C3,2.3,4,1,5.7,1S8.3,2.2,8.3,3.7z M3,25V7.7h5.3V25H3z\"/>\n          <path d=\"M11,13.6c0-2.1-0.1-3.8-0.1-5.3h4.8l0.2,2.3H16C16.7,9.5,18.3,8,21.1,8c3.4,0,5.9,2.3,5.9,7.1V25h-5.3v-9.1\n            c0-2.1-0.8-3.7-2.7-3.7c-1.4,0-2.1,1.1-2.5,2.1c-0.1,0.3-0.2,0.8-0.2,1.3V25H11V13.6z\"/>\n        </g>\n      </g>\n    </Icon>\n  );\n};\n\nexport default LinkedInIcon;\n"],"names":[],"mappings":"AAAA;;;;;;;;;;CAUC;;;;;;;AAGD;;;AAUO,MAAM,eAA4C,CAAC,EACxD,GAAG,OACJ;IACC,qBACE,gaAAC,8LAAI;QAAE,GAAG,KAAK;kBACb,cAAA,gaAAC;sBACC,cAAA,gaAAC;;kCACC,gaAAC;wBAAK,GAAE;;;;;;kCACR,gaAAC;wBAAK,GAAE;;;;;;;;;;;;;;;;;;;;;;AAMlB;uCAEe","debugId":null}},
    {"offset": {"line": 589, "column": 0}, "map": {"version":3,"sources":["file:///home/devlinux/devlinux/littletuna4.github.io/site/src/components/icons/FacebookIcon.tsx"],"sourcesContent":["/**\n * Facebook Icon Component\n * \n * Functional Requirements:\n * - Renders the Facebook logo as a theme-aware React component\n * - Integrates with the theme system for automatic light/dark mode support\n * - Supports customizable sizing and colors through the base Icon component\n * - Maintains accessibility with proper ARIA attributes\n * - Provides consistent styling with other icon components\n * - Uses semantic color classes for theme integration\n */\n\nimport React from 'react';\nimport { Icon, type IconProps } from './Icon';\n\nexport interface FacebookIconProps extends Omit<IconProps, 'children'> {\n  /**\n   * Whether to show the Facebook text along with the icon\n   * @default false\n   */\n  showText?: boolean;\n}\n\nexport const FacebookIcon: React.FC<FacebookIconProps> = ({\n  ...props\n}) => {\n  return (\n    <Icon {...props}>\n      <g>\n        <path d=\"M26,1H5C3.3,1,2,2.3,2,4v21c0,1.7,1.3,3,3,3h10.5V17.5h-3v-3.7h3v-3.1c0-3.2,1.8-5.5,5.6-5.5l2.7,0v3.9h-1.8\n          c-1.5,0-2.1,1.1-2.1,2.2v2.5h3.9L23,17.5h-3V28h6c1.7,0,3-1.3,3-3V4C29,2.3,27.7,1,26,1z\"/>\n      </g>\n    </Icon>\n  );\n};\n\nexport default FacebookIcon;\n"],"names":[],"mappings":"AAAA;;;;;;;;;;CAUC;;;;;;;AAGD;;;AAUO,MAAM,eAA4C,CAAC,EACxD,GAAG,OACJ;IACC,qBACE,gaAAC,8LAAI;QAAE,GAAG,KAAK;kBACb,cAAA,gaAAC;sBACC,cAAA,gaAAC;gBAAK,GAAE;;;;;;;;;;;;;;;;AAKhB;uCAEe","debugId":null}},
    {"offset": {"line": 636, "column": 0}, "map": {"version":3,"sources":["file:///home/devlinux/devlinux/littletuna4.github.io/site/src/components/index.ts"],"sourcesContent":["export { default as Header } from './Header';\nexport { default as Footer } from './Footer';\nexport { default as HeroSection } from './HeroSection';\nexport { default as BlogSection } from './BlogSection';\nexport { default as TypewriterAnimation } from './TypewriterAnimation';\nexport { default as IndustriesSection } from './Industries/IndustriesSection';\n\n// Theme components\nexport { ThemeProvider, useTheme } from './providers/ThemeProvider';\nexport { ClientThemeProvider } from './providers/ClientThemeProvider';\nexport { ThemeToggle } from './ui/ThemeToggle';\nexport { SimpleThemeToggle } from './ui/SimpleThemeToggle';\n\n// UI components\nexport { MetadataBreadcrumb, useBreadcrumbs } from './ui/metadata-breadcrumb';\nexport { StructuredBreadcrumb } from './ui/structured-breadcrumb';\n\n// MDX components are now handled by @next/mdx automatically via mdx-components.tsx\n\n// Icon components\nexport { Icon, type IconProps } from './icons/Icon';\nexport { LinkedInIcon, type LinkedInIconProps } from './icons/LinkedInIcon';\nexport { FacebookIcon, type FacebookIconProps } from './icons/FacebookIcon';\n"],"names":[],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AAEA,mBAAmB;AACnB;AACA;AACA;AACA;AAEA,gBAAgB;AAChB;AACA;AAEA,mFAAmF;AAEnF,kBAAkB;AAClB;AACA;AACA","debugId":null}},
    {"offset": {"line": 693, "column": 0}, "map": {"version":3,"sources":["file:///home/devlinux/devlinux/littletuna4.github.io/site/src/app/page.tsx"],"sourcesContent":["import { HeroSection, IndustriesSection } from '@/components';\nexport default function Home() {\n  return (\n    <div className='min-h-screen bg-background'>\n      <HeroSection />\n      <IndustriesSection />\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAAA;AAAA;AAAA;;;AACe,SAAS;IACtB,qBACE,gaAAC;QAAI,WAAU;;0BACb,gaAAC,6OAAW;;;;;0BACZ,gaAAC,6QAAiB;;;;;;;;;;;AAGxB","debugId":null}}]
}