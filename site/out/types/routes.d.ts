// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/blog" | "/blog/example" | "/career-ledger/[[...slug]]" | "/events" | "/events/[slug]" | "/industries" | "/join" | "/partners" | "/partners/[slug]" | "/services" | "/theme-demo"
type PageRoutes = never
type LayoutRoutes = "/" | "/blog" | "/career-ledger"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes


interface ParamMap {
  "/": {}
  "/blog": {}
  "/blog/example": {}
  "/career-ledger": {}
  "/career-ledger/[[...slug]]": { "slug"?: string[]; }
  "/events": {}
  "/events/[slug]": { "slug": string; }
  "/industries": {}
  "/join": {}
  "/partners": {}
  "/partners/[slug]": { "slug": string; }
  "/services": {}
  "/theme-demo": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
  "/blog": never
  "/career-ledger": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }
}
